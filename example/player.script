--this behavior script describes the local playable character
function init(self)
	self.position = vmath.vector3(0,0,0)
	self.input = {w=false,a=false,s=false,d=false,x=0,y=0}
	self.speed = 3
	self.keys = {[hash("key_w")] = "w", [hash("key_a")] = "a", [hash("key_s")] = "s", [hash("key_d")] = "d"}
	msg.post(".", "acquire_input_focus")
	msg.post("/main", "pp_init", {}) --this initializes the SDK. If you are using authentication, you should provide the player's login to the
end								   --third parameter in the form {username=$$$, password=$$$}

function fixed_update(self, dt) --fixed update is configured in game.project to only fire 10 times a second
	if self.send and self.joined then --this protects against wasting bandwidth on empty messages
		self.send = false
		self.input.x = (self.input.d and self.speed or 0) - (self.input.a and self.speed or 0)
		self.input.y = (self.input.w and self.speed or 0) - (self.input.s and self.speed or 0)
		self.position.x, self.position.y = self.position.x + self.input.x*dt, self.position.y + self.input.y*dt
		msg.post("/main", "pp_message", { x=self.input.x*dt, y=self.input.y*dt, z=0})
		go.animate("/player", "position", go.PLAYBACK_ONCE_FORWARD, self.position, go.EASING_LINEAR, dt)
	end
end

function on_input(self, action_id, action)
	if action_id == hash("key_space") and action.pressed and not self.joined then --this if statement prevents the player from sending the 
		self.joined = true														  --pp_join message twice, and requires the player to press 
		msg.post("/main", "pp_join")												  --SPACE to start the game
	elseif self.keys[action_id] then --listen for WASD and set self.input.{key} to true if it is pressed
		self.input[self.keys[action_id]] = not action.released
		self.send = true
	elseif action_id == hash("key_l") and action.pressed and self.joined then --disconnect from the PP servers
		self.joined = false
		msg.post("/main", "pp_disconnect")	
	elseif action_id == hash("key_j") and action.pressed and not self.joined then --reconnect to the PP servers
		msg.post("/main", "pp_init")						
	end
end

